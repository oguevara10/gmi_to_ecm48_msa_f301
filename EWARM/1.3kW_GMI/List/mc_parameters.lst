###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.9.278/W32 for ARM         23/Feb/2021  11:12:47
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                        
#    Endian                       =  little
#    Source file                  =
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\Src\mc_parameters.c
#    Command line                 =
#        -f C:\Users\100001~1\AppData\Local\Temp\EWF1D4.tmp
#        (C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\Src\mc_parameters.c
#        -D ARM_MATH_CM4 -D USE_FULL_LL_DRIVER -D USE_HAL_DRIVER -D STM32F302x8
#        -lCN
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\1.3kW_GMI\List
#        -o
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\1.3kW_GMI\Obj
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Full.h" -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../Inc\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../Drivers/STM32F3xx_HAL_Driver/Inc\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../Drivers/STM32F3xx_HAL_Driver/Inc/Legacy\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../MCSDK_v5.4.4-Full/MotorControl/MCSDK/MCLib/Any/Inc\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../MCSDK_v5.4.4-Full/MotorControl/MCSDK/MCLib/F3xx/Inc\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../MCSDK_v5.4.4-Full/MotorControl/MCSDK/UILibrary/Inc\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../MCSDK_v5.4.4-Full/MotorControl/MCSDK/SystemDriveParams\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../Drivers/CMSIS/Device/ST/STM32F3xx/Include\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../Drivers/CMSIS/Include\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM/../Drivers/CMSIS/DSP/Include\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\..\FlexMouse\Drivers\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\..\FlexMouse\Features\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\..\FlexMouse\Kernel\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\..\FlexMouse\Memory\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\..\FlexMouse\Regal\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\..\FlexMouse\UniversalProtocol\\
#        -I
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\..\FlexMouse\Motor\\
#        -Ohz)
#    Locale                       =  C
#    List file                    =
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\1.3kW_GMI\List\mc_parameters.lst
#    Object file                  =
#        C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\EWARM\1.3kW_GMI\Obj\mc_parameters.o
#    Runtime model:                  
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  1
#      __dlib_version             =  6
#
###############################################################################

C:\Users\100001305\Documents\GitHub\gmi_to_ecm48_msa_f301\Src\mc_parameters.c
      1          
      2          /**
      3            ******************************************************************************
      4            * @file    mc_parameters.c
      5            * @author  Motor Control SDK Team, ST Microelectronics
      6            * @brief   This file provides definitions of HW parameters specific to the 
      7            *          configuration of the subsystem.
      8            *
      9            ******************************************************************************
     10            * @attention
     11            *
     12            * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
     13            * All rights reserved.</center></h2>
     14            *
     15            * This software component is licensed by ST under Ultimate Liberty license
     16            * SLA0044, the "License"; You may not use this file except in compliance with
     17            * the License. You may obtain a copy of the License at:
     18            *                             www.st.com/SLA0044
     19            *
     20            ******************************************************************************
     21            */
     22          
     23          /* Includes ------------------------------------------------------------------*/
     24          #include "main.h"
     25          #include "parameters_conversion.h"
     26           
     27          #include "r3_1_f30x_pwm_curr_fdbk.h"
     28           
     29           
     30           
     31           
     32           
     33           
     34           
     35          
     36          /* USER CODE BEGIN Additional include */
     37          
     38          /* USER CODE END Additional include */  
     39          
     40          #define FREQ_RATIO 1                /* Dummy value for single drive */
     41          #define FREQ_RELATION HIGHEST_FREQ  /* Dummy value for single drive */
     42           
     43          
     44          /**
     45            * @brief  Current sensor parameters Motor 1 - three shunt 1 ADC (STM32F302x8)
     46            */

   \                                 In section .rodata, align 4
     47          const R3_1_Params_t R3_1_ParamsM1 =
   \                     R3_1_ParamsM1:
   \        0x0   0x5000'0000        DC32 0x5000'0000, 0x4001'2c00, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

   \              0x4001'2C00  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000
   \       0x24   0x5000'0080        DC32 0x5000'0080, 0x5000'0080, 0x5000'0084, 0x5000'0084, 0x5000'0080

   \              0x5000'0080  

   \              0x5000'0084  

   \              0x5000'0084  

   \              0x5000'0080
   \       0x38   0x5000'0084        DC32 0x5000'0084, 0x5000'0084, 0x5000'0084, 0x5000'0080, 0x5000'0080

   \              0x5000'0084  

   \              0x5000'0084  

   \              0x5000'0080  

   \              0x5000'0080
   \       0x4C   0x5000'0084        DC32 0x5000'0084, 0x5000'0080, 164'353, 164'097, 18'945, 16'897, 33'025

   \              0x5000'0080  

   \              0x0002'8201  

   \              0x0002'8101  

   \              0x0000'4A01  

   \              0x0000'4201  

   \              0x0000'8101
   \       0x68   0x0000'8A01        DC32 35'329
   \       0x6C   0x0000 0x0000      DC16 0, 0, 0, 256, 140, 23'830, 23'830

   \               0x0000 0x010

   \              0 0x008C 0x5D

   \              16 0x5D16
   \       0x7A   0x01 0x01          DC8 1, 1, 0, 0, 0, 0, 0, 1, 1

   \              0x00 0x00    

   \              0x00 0x00    

   \              0x00 0x01    

   \              0x01
   \       0x83                      DS8 1
     48          {
     49          /* Dual MC parameters --------------------------------------------------------*/
     50            .FreqRatio       = FREQ_RATIO,                         
     51            .IsHigherFreqTim = FREQ_RELATION,                      
     52                                                                    
     53          /* Current reading A/D Conversions initialization -----------------------------*/
     54            .ADCx           = ADC1,
     55            .ADCConfig = {
     56                           MC_ADC_CHANNEL_2<<ADC_JSQR_JSQ1_Pos | MC_ADC_CHANNEL_10<<ADC_JSQR_JSQ2_Pos | 1<<ADC_JSQR_JL_Pos | (LL_ADC_INJ_TRIG_EXT_TIM1_TRGO & ~ADC_INJ_TRIG_EXT_EDGE_DEFAULT),
     57                           MC_ADC_CHANNEL_1<<ADC_JSQR_JSQ1_Pos | MC_ADC_CHANNEL_10<<ADC_JSQR_JSQ2_Pos | 1<<ADC_JSQR_JL_Pos | (LL_ADC_INJ_TRIG_EXT_TIM1_TRGO & ~ADC_INJ_TRIG_EXT_EDGE_DEFAULT),
     58                           MC_ADC_CHANNEL_10<<ADC_JSQR_JSQ1_Pos | MC_ADC_CHANNEL_1<<ADC_JSQR_JSQ2_Pos | 1<<ADC_JSQR_JL_Pos | (LL_ADC_INJ_TRIG_EXT_TIM1_TRGO & ~ADC_INJ_TRIG_EXT_EDGE_DEFAULT),
     59                           MC_ADC_CHANNEL_2<<ADC_JSQR_JSQ1_Pos | MC_ADC_CHANNEL_1<<ADC_JSQR_JSQ2_Pos | 1<<ADC_JSQR_JL_Pos | (LL_ADC_INJ_TRIG_EXT_TIM1_TRGO & ~ADC_INJ_TRIG_EXT_EDGE_DEFAULT),
     60                           MC_ADC_CHANNEL_1<<ADC_JSQR_JSQ1_Pos | MC_ADC_CHANNEL_2<<ADC_JSQR_JSQ2_Pos | 1<<ADC_JSQR_JL_Pos | (LL_ADC_INJ_TRIG_EXT_TIM1_TRGO & ~ADC_INJ_TRIG_EXT_EDGE_DEFAULT),
     61                           MC_ADC_CHANNEL_10<<ADC_JSQR_JSQ1_Pos | MC_ADC_CHANNEL_2<<ADC_JSQR_JSQ2_Pos | 1<<ADC_JSQR_JL_Pos | (LL_ADC_INJ_TRIG_EXT_TIM1_TRGO & ~ADC_INJ_TRIG_EXT_EDGE_DEFAULT),
     62            },
     63            
     64            .ADCDataReg1 = {
     65                             &ADC1->JDR1,
     66                             &ADC1->JDR1,
     67                             &ADC1->JDR2,
     68                             &ADC1->JDR2,
     69                             &ADC1->JDR1,
     70                             &ADC1->JDR2,
     71            },
     72            .ADCDataReg2 = {
     73                             &ADC1->JDR2,
     74                             &ADC1->JDR2,
     75                             &ADC1->JDR1,
     76                             &ADC1->JDR1,
     77                             &ADC1->JDR2,
     78                             &ADC1->JDR1,
     79            },  
     80           
     81          /* PWM generation parameters --------------------------------------------------*/
     82            .RepetitionCounter = REP_COUNTER,                    
     83            .Tafter            = TW_AFTER,                       
     84            .Tbefore           = TW_BEFORE_R3_1,                      
     85            .TIMx               = TIM1,            
     86                                                                  
     87          /* PWM Driving signals initialization ----------------------------------------*/
     88            .LowSideOutputs = (LowSideOutputsFunction_t)LOW_SIDE_SIGNALS_ENABLING, 
     89           .pwm_en_u_port      = MC_NULL,                   
     90           .pwm_en_u_pin       = (uint16_t) 0,
     91           .pwm_en_v_port      = MC_NULL,                     
     92           .pwm_en_v_pin       = (uint16_t) 0,                  
     93           .pwm_en_w_port      = MC_NULL,                   
     94           .pwm_en_w_pin       = (uint16_t) 0,
     95                          
     96          
     97          /* Emergency input (BKIN2) signal initialization -----------------------------*/
     98            .BKIN2Mode     = NONE,                             
     99          
    100          /* Internal COMP settings ----------------------------------------------------*/
    101            .CompOCPASelection     = MC_NULL,
    102            .CompOCPAInvInput_MODE = NONE,                          
    103            .CompOCPBSelection     = MC_NULL,      
    104            .CompOCPBInvInput_MODE = NONE,              
    105            .CompOCPCSelection     = MC_NULL,        
    106            .CompOCPCInvInput_MODE = NONE,                                         
    107          
    108            .CompOVPSelection      = MC_NULL,       
    109            .CompOVPInvInput_MODE  = NONE,
    110                                                                   
    111          /* DAC settings --------------------------------------------------------------*/
    112            .DAC_OCP_Threshold =  23830,                                        
    113            .DAC_OVP_Threshold =  23830,                                                                       
    114          };
    115             
    116          
    117          /* USER CODE BEGIN Additional parameters */
    118          
    119          /* USER CODE END Additional parameters */  
    120          
    121          /******************* (C) COPYRIGHT 2019 STMicroelectronics *****END OF FILE****/


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     132  R3_1_ParamsM1

 
 132 bytes in section .rodata
 
 132 bytes of CONST memory

Errors: none
Warnings: none
